#include <bits/stdc++.h>

using namespace std;

#define LEN(s) ((int)(s).length())
#define SZ(v) ((int)(v).size())
#define INF32 (1 << 30)
#define INF64 (1LL << 60)
#define PB push_back
#define MP make_pair
#define CLR(v) ((v).clear())
#define ALL(v) (v).begin(), (v).end()
#define ZERO(v) memset(v, 0, sizeof(v))

typedef long long LL;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<LL> vll;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<bool> vb;

class AntsMeet {
    public:
        int countAnts(vi x, vi y, string d) {
            auto n = SZ(x);
            vb f(n);
            auto res = n;
            while (true) {
                auto m = INF32, lm = INF32;
                for (int i = 0; i < n; ++ i) if (!f[i]) {
                    for (int j = i + 1; j < n; ++ j) if (!f[j]) {
                        auto dx = abs(x[i] - x[j]), dy = abs(y[i] - y[j]);
                        if (x[i] == x[j]) {
                            if (y[i] > y[j] && d[i] == 'S' && d[j] == 'N') lm = min(lm, dy);
                            else if (y[i] < y[j] && d[i] == 'N' && d[j] == 'S') lm = min(lm, dy);
                        } else if (y[i] == y[j]) {
                            if (x[i] > x[j] && d[i] == 'W' && d[j] == 'E') lm = min(lm, dx);
                            else if (x[i] < x[j] && d[i] == 'E' && d[j] == 'W') lm = min(lm, dx);
                        }
                        if (dx != dy) continue;
                        if (d[i] == 'N' && d[j] == 'W' && y[i] < y[j] && x[i] < x[j]) m = min(m, dx);
                        else if (d[i] == 'N' && d[j] == 'E' && y[i] < y[j] && x[i] > x[j]) m = min(m, dx);
                        else if (d[i] == 'S' && d[j] == 'W' && y[i] > y[j] && x[i] < x[j]) m = min(m, dx);
                        else if (d[i] == 'S' && d[j] == 'E' && y[i] > y[j] && x[i] > x[j]) m = min(m, dx);
                        else if (d[i] == 'W' && d[j] == 'N' && x[i] > x[j] && y[i] > y[j]) m = min(m, dx);
                        else if (d[i] == 'W' && d[j] == 'S' && x[i] > x[j] && y[i] < y[j]) m = min(m, dx);
                        else if (d[i] == 'E' && d[j] == 'N' && x[i] < x[j] && y[i] > y[j]) m = min(m, dx);
                        else if (d[i] == 'E' && d[j] == 'S' && x[i] < x[j] && y[i] < y[j]) m = min(m, dx);
                    }
                }
                if (lm == INF32 && m == INF32) break;
                if (lm / 2.0 < m) {
                    for (int i = 0; i < n; ++ i) if (!f[i]) {
                        for (int j = i + 1; j < n && !f[i]; ++ j) if (!f[j]) {
                            auto dx = abs(x[i] - x[j]), dy = abs(y[i] - y[j]);
                            if (x[i] == x[j] && dy == lm) {
                                if (y[i] > y[j] && d[i] == 'S' && d[j] == 'N') {
                                    f[i] = f[j] = true;
                                    res -= 2;
                                } else if (y[i] < y[j] && d[i] == 'N' && d[j] == 'S') {
                                    f[i] = f[j] = true;
                                    res -= 2;
                                }
                            } else if (y[i] == y[j] && dx == lm) {
                                if (x[i] > x[j] && d[i] == 'W' && d[j] == 'E') {
                                    f[i] = f[j] = true;
                                    res -= 2;
                                } else if (x[i] < x[j] && d[i] == 'E' && d[j] == 'W') {
                                    f[i] = f[j] = true;
                                    res -= 2;
                                }
                            }
                        }
                    }
                } else {
                    map<pii, int> c;
                    for (int i = 0; i < n; ++ i) if (!f[i]) {
                        if (d[i] == 'N') y[i] += m;
                        else if (d[i] == 'S') y[i] -= m;
                        else if (d[i] == 'W') x[i] -= m;
                        else x[i] += m;
                        auto p = make_pair(x[i], y[i]);
                        if (c.find(p) == c.end()) c[p] = 1;
                        else ++ c[p];
                    }
                    for (int i = 0; i < n; ++ i) if (!f[i]) {
                        auto p = make_pair(x[i], y[i]);
                        if (c[p] > 1) {
                            f[i] = true;
                            -- res;
                        }
                    }
                }
            }
            return res;
        }
};

int main(int argc, char** argv) {
    auto obj = AntsMeet();

    auto x = vi{0,10,20,30};
    auto y = vi{0,10,20,30};
    string d = "NWNE";
    auto ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{-10,0,0,10};
    y = vi{0,-10,10,0};
    d = "NEWS";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{0,9,0,0};
    y = vi{0,0,4,5};
    d = "EWSS";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{-1,1,0,-1,1,0,0,-1,1};
    y = vi{0,0,0,-1,-1,1,-1,1,1};
    d = "EENWWSWSE";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{-2,-3,-2,1,-3};
    y = vi{-1,-1,-3,3,-2};
    d = "SWNSE";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{-1,-1,-1,0,0,0,1,1,1};
    y = vi{-1,0,1,-1,0,1,-1,0,1};
    d = "ESEWNNEWW";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{4,7,6,2,6,5,7,7,8,4,7,8,8,8,5,4,8,9,1,5,9,3,4,0,0,1,0,7,2,6,9,6,3,0,5,5,1,2,0,4,9,7,7,1,8,1,9,2,7,3};
    y = vi{2,3,0,6,8,4,9,0,5,0,2,4,3,8,1,5,0,7,3,7,0,9,8,1,9,4,7,8,1,1,6,6,6,2,8,5,1,9,0,1,1,1,7,0,2,5,4,7,5,3};
    d = "SSNWSWSENSWSESWEWSWSENWNNNESWSWSWWSSWEEWWNWWWNWENN";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{0};
    y = vi{0};
    d = "N";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{-1000, 1000};
    y = vi{-1000, 1000};
    d = "NW";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{412,412,734,734};
    y = vi{597,275,597,275};
    d = "SEEE";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{-531,406,232,648,547,470,648,406,-168,814,503,322,434,828,503,648,-443,828,-220,470,502,404,-592,322,547,-531,457,648,502,729,-443,-168,404,729,457,-220,232,814,434,-592};
    y = vi{625,-692,-73,605,179,102,585,-595,585,207,-692,-73,387,-7,-595,-231,-218,387,991,179,459,207,564,17,102,564,991,459,605,954,954,-231,617,-218,314,314,17,617,-7,625};
    d = "ESNEWWSWNSWWNENNESNWSNSWWNNNSWNNWEEWESNN";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{499,497,968,601,-487,234,-59,-59,228,-297,898,497,602,224,499,228,602,-487,115,-256,341,573,417,-331,341,-465,869,-297,670,716,224,23,467,670,383,756,898,115,23,-331,261,261,573,417,-219,869,467,-219,328,601};
    y = vi{604,729,324,335,862,335,434,862,211,962,163,699,-129,560,433,-348,138,434,119,519,324,766,606,-348,962,-238,138,324,163,905,359,560,729,391,119,536,391,-149,359,211,766,454,454,905,519,-129,699,482,433,-32};
    d = "WSNEWWNESESSWENSWSNWSSSESWENWSWNSNEWWSSNNNNWNNWSWW";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{45,-16,-400,-271,-301,883,-350,-214,-25,-641,-271,-697,-156,-301,950,552,742,-670,-16,883,-506,314,-214,542,81,45,264,81,613,348,799,-25,683,552,-350,542,-670,692,683,742,264,-697,613,950,-132,-641,799,-506,-156,862};
    y = vi{591,-464,525,814,259,136,599,-464,744,138,675,599,-119,908,-137,-195,437,807,-266,-195,631,807,-266,437,-119,372,372,-356,-381,259,-381,36,36,136,946,237,-177,-558,744,237,591,946,-195,531,675,165,-195,525,-356,-558};
    d = "NNSNSSSWNNNSNSENSNEWESWSWWWWSWEEWESEEWWSSEWSNNENEN";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{-205,454,-176,667,846,51,785,846,7,-160,929,87,-160,503,-253,881,-166,830,334,-533,619,486,-205,63,503,486,-498,667,929,51,63,583,87,830,388,7,388,-54,-582,-257,583,-371,-367,-176,-253,454,-54,-180,-166,-498};
    y = vi{-193,-193,531,-185,902,695,639,542,714,-280,-486,-151,710,-51,757,-180,-51,710,-533,469,-185,902,466,695,618,542,-644,-137,810,707,707,118,469,-280,41,531,686,-686,-686,41,-180,875,-486,714,875,466,-158,-533,618,639};
    d = "SWESEWENNSNNESWNSSESSWSENNWSWEWWWNEESWNENNWENNWWNS";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{-173,-678,-129,100,965,-341,-388,-388,694,44,152,-509,-193,-407,-407,485,44,986,-97,559,-97,-202,986,-678,379,-105,888,-341,270,912,559,888,18,291,270,291,-193,-129,485,773,912,-491,-665,965,-598,-491,694,-105,-202,-598};
    y = vi{691,691,-20,668,936,668,-471,69,665,796,69,226,865,-235,657,-235,655,-622,655,385,796,-322,469,186,493,469,385,227,602,-240,56,56,231,999,493,110,-240,-382,657,231,865,-382,141,665,110,-20,936,-622,141,999};
    d = "NESEENNSWWWWNSESSWENNNWNNSEWWESNNWNNSSNSSWWWEWWNNS";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = vi{-340,-127,674,115,89,895,-900,-323,-158,-287};
    y = vi{0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    d = "WWWWEEEWWW";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = {-173,-678,-129,100,965,-341,-388,-388,694,44,152,-509,-193,-407,-407,485,44,986,-97,559,-97,-202,986,-678,379,-105,888,-341,270,912,559,888,18,291,270,291,-193,-129,485,773,912,-491,-665,965,-598,-491,694,-105,-202,-598};
    y = {691,691,-20,668,936,668,-471,69,665,796,69,226,865,-235,657,-235,655,-622,655,385,796,-322,469,186,493,469,385,227,602,-240,56,56,231,999,493,110,-240,-382,657,231,865,-382,141,665,110,-20,936,-622,141,999};
    d = "NESEENNSWWWWNSESSWENNNWNNSEWWESNNWNNSSNSSWWWEWWNNS";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = {545,449,683,144,-584,858,-237,-153,538,771,339,819,631,631,-544,995,-193,-12,84,771,84,545,764,-137,819,-193,538,-471,-237,858,-12,697,144,449,289,-471,72,72,-137,888,289,-274,888,226,120,697,683,339,-274,120};
    y = {-325,259,-320,286,35,-12,975,750,462,-223,559,-81,773,286,359,-320,503,503,-216,428,-228,-12,462,259,975,684,236,60,-81,-325,684,367,773,845,654,257,-228,-216,845,367,336,60,176,446,428,176,-8,446,257,-223};
    d = "NSESWENSWWNNSSWENNENSSESSSSENENSWSNEESWWNSSSEWSWWE";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = {-66,903,498,-394,389,-381,462,184,-29,231,415,-469,-394,-388,636,636,415,498,-577,288,-469,4,14,462,-324,0,744,402,-341,-341,389,903,-482,-324,-625,-625,-195,231,-486,582,288,-490,-490,-577,0,-388,-22,4,744,-482};
    y = {820,-34,57,492,-306,303,-45,-34,571,752,-306,750,820,296,-94,571,-332,577,750,-119,858,-6,535,-105,924,-119,558,-105,558,-527,-332,685,674,18,817,674,39,535,-6,18,-407,39,334,858,-407,303,57,484,-527,817};
    d = "SSNNSESSSEEWSNWSNEEWSEWWWNSSSSNSEEENESSWWEWWNEWWWW";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = {478,-664,759,434,-405,513,565,-396,311,-174,56,993,251,-341,993,-112,242,129,383,513,-78,-341,-148,129,423 ,493,434,-405,478,-148,929,251,56,242,929,-78,423,-664,802,251,759,383,-112,-591,-591,-248,660,660,735,493};
    y = {-186,98,948,795,289,-678,948,-170,-195,290,-354,-424,289,-157,-166,150,706,-678,684,-294,-234,36,36,-294,-216 ,-234,427,945,265,-157,265,715,275,715,-186,337,798,-170,427,706,754,961,286,-216,798,286,961,684,-424,337};
    d = "WNSNNSSWWWEENWESNSWSWSEWWEWEWWWNWESNSSNNSNNWWWNESE";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = {-12,133,648,597,231,841,455,81,257,-541,589,-541,-142,-471,359,55,55,-78,-12,-78,-220,841,-220,133,-691,-531,111,-297,771,575,-471,-188,597,359,575,910,81,455,-277,-12,-277,771,-490,111,231,257,648,-490,910,-188};
    y = {-197,-342,-84,-26,384,603,603,-507,-507,388,402,439,76,-111,512,-400,-267,-267,-342,-400,626,989,594,-197,731,65,-111,65,-84,388,471,626,287,384,402,287,-331,989,612,52,489,-207,439,471,512,-331,-207,388,-26,594};
    d = "SWSSNENWNNSWENSWESEEEESENNNSNWNSSWSSWEWWSSNNESSWSN";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = {-326,275,96,528,-247,584,275,511,603,436,857,857,-1,-247,226,-470,22,625,-115,-117,88,-388,528,511,302,-326,22,-59,854,-1,-310,722,722,-117,781,-59,508,697,235,235,625,864,-208,508,854,781,302,584,-115,603};
    y = {398,701,-24,-656,-208,758,254,646,609,-8,270,-79,728,-76,202,342,67,-376,-76,260,728,521,342,293,308,-24,-692,308,830,639,260,701,254,453,-692,-376,270,758,-209,-8,308,293,701,-79,202,67,609,871,-208,308};
    d = "SSWSWENSEWESWWNWWSWWESSSSWNNWNWNESWSEWWEWSWEWSEEWE";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    x = {532,-557,662,4,-624,-160,460,591,-557,-21,-201,-338,-474,910,-338,932,29,805,459,906,821,805,-160,662,906,-624,932,522,-311,460,4,-494,459,-474,-494,579,454,821,591,579,910,482,-177,454,29,32,532,-338,482,-21};
    y = {651,895,129,334,738,-438,938,687,334,-576,416,-259,-200,700,-481,789,451,-241,129,-438,940,-564,628,-74,628,82,-481,312,528,301,895,528,-74,853,345,-200,824,651,824,853,312,-241,938,687,322,82,940,789,-564,-259};
    d = "ESNWSNEWNSSSESSWENWSSSNNWNSENWWWSESSSNEWEEEEWEEWSS";
    ret = obj.countAnts(x, y, d);
    cout << ret << endl;

    return 0;
}
